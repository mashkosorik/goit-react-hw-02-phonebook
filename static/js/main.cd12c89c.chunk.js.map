{"version":3,"sources":["Components/Phone/PhoneBook.js","Components/Phone/PhoneEditor.js","Components/Phone/PhoneFilter.js","App.js","index.js","Components/Phone/phoneEditor.module.css"],"names":["PhoneBook","contactList","deleteContact","console","log","className","s","contacts","map","el","name","number","id","onClick","PhoneEditor","state","userName","userPhone","handleChange","e","target","value","setState","handleSubmit","preventDefault","newContact","uuid","props","some","contact","toLowerCase","alert","x","phone","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","PhoneFilter","filter","onHandleChangeFilter","search","App","addNewContact","object","prevState","getFiltredContacts","includes","toLocaleLowerCase","oldContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cd12c89c.chunk.js","sourcesContent":["import React from 'react'\nimport s from './phoneEditor.module.css'\n\nconst PhoneBook = ({ contactList, deleteContact }) => {\n  console.log(contactList)\n  return (\n    <>\n      <h2 className={s.contacts}>Contacts</h2>\n      <ul className={s.contacts}>\n        {contactList.map((el) => {\n          return (\n            <li key={el.id}>\n              <p>\n                name - {el.name} number - {el.number}\n              </p>\n              <button id={el.id} onClick={deleteContact}>\n                Delete\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default PhoneBook\n","import React, { Component } from 'react'\nimport { v4 as uuid } from 'uuid'\nimport s from './phoneEditor.module.css'\n\nexport default class PhoneEditor extends Component {\n  state = {\n    userName: '',\n    userPhone: '',\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const isContactExist = (userName) =>\n      this.props.contactList.some(\n        (contact) => userName.toLowerCase() === contact.name.toLowerCase(),\n      )\n    const newContact = {\n      id: uuid(),\n\n      name: this.state.userName,\n      number: this.state.userPhone,\n    }\n    if (!isContactExist(this.state.userName)) {\n      this.props.x(newContact)\n    } else alert(`contact ${this.state.userName} already exist`)\n  }\n\n  render() {\n    return (\n      <>\n        <form className={s.phone} onSubmit={this.handleSubmit}>\n          <h2>Phone book</h2>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            id=\"name\"\n            name=\"userName\"\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"phone\">Phone</label>\n          <input\n            id=\"phone\"\n            name=\"userPhone\"\n            type=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.phone}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport s from './phoneEditor.module.css'\n\nconst PhoneFilter = ({ filter, onHandleChangeFilter }) => {\n  return (\n    <>\n      <label htmlFor=\"name\">\n        <p className={s.contacts}>Search</p>\n      </label>\n      <input\n        className={s.search}\n        id=\"name\"\n        name=\"userName\"\n        type=\"text\"\n        value={filter}\n        onChange={onHandleChangeFilter}\n      />\n    </>\n  )\n}\n\nexport default PhoneFilter\n","import React, { Component } from 'react'\nimport PhoneBook from './Components/Phone/PhoneBook'\nimport PhoneEditor from './Components/Phone/PhoneEditor'\nimport PhoneFilter from './Components/Phone/PhoneFilter'\n// import { v4 as uuid } from 'uuid'\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    filter: '',\n  }\n  addNewContact = (object) => {\n    // const isContactExist = (name) =>\n    //   this.state.contacts.some(\n    //     (contact) => contact.name.toLowerCase() === name.toLowerCase(),\n    //   )\n\n    return this.setState({\n      contacts: [...this.state.contacts, object],\n    })\n  }\n\n  componentDidMount() {\n    const oldContacts = localStorage.getItem('contacts')\n    if (oldContacts) {\n      this.setState({\n        contacts: JSON.parse(oldContacts),\n      })\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  deleteContact = (e) => {\n    const id = e.target.id\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts.filter((contact) => contact.id !== id)],\n    }))\n  }\n\n  onHandleChangeFilter = (e) => {\n    this.setState({ filter: e.target.value })\n  }\n\n  getFiltredContacts = () => {\n    return [\n      ...this.state.contacts.filter((contact) =>\n        contact.name\n          .toLowerCase()\n          .includes(this.state.filter.toLocaleLowerCase()),\n      ),\n    ]\n  }\n\n  render() {\n    return (\n      <>\n        <PhoneEditor\n          x={this.addNewContact}\n          contactList={this.state.contacts}\n          // isContactExist={this.isContactExist}\n        />\n        <PhoneFilter\n          filter={this.state.filter}\n          onHandleChangeFilter={this.onHandleChangeFilter}\n        />\n        <PhoneBook\n          contactList={this.getFiltredContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone\":\"phoneEditor_phone__2C20a\",\"description\":\"phoneEditor_description__27yvJ\",\"name\":\"phoneEditor_name__1U-Ns\",\"statistics\":\"phoneEditor_statistics__HptqC\",\"contacts\":\"phoneEditor_contacts__-Y27F\",\"search\":\"phoneEditor_search__23kY1\"};"],"sourceRoot":""}